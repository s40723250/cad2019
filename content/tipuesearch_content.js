var tipuesearch = {"pages": [{'title': 'Week2-9', 'text': 'Week1 \n 中秋節連假 \n Week2 \n 創建github倉儲並且練習github指令 \n \n 1. 創立並且加入課程倉儲名稱為Cad2019 , 然後勾選lnitialize this repository with a README \n 2.\xa0 git clone到近端上(至mde.tw中下載2019fall可攜套件) \n 3. 使用git submodule add之指令建立目錄並取下子模組 \n 4. 當要開啟近端時必須要先進入cmsimde才能夠打上python wsgi.py指令 \n 影片 :\xa0 \n Week3 \n 1.先將 Y:\\portablegit\\bin\\sh.exe 改名為 sh_rename_for_solvespace.exe \n 2. \xa0打指令git clone\xa0 --recurse-submodules \n 3.到untitle編輯cmakelist內之713及714行(加入#字號) \n 4.進入資料夾 cd solvespace>cd extlib>cd libpng>mkdir build>cd build \n 5.執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make \n 6.找到檔案 \xa0libpng.dll.a 更名, 更名名為 libpng_static.a \n 7.回到 solvespace 目錄,建立 build 目錄後進入 build 資料夾 \n 8.在執行指令cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make \n Week4 \n 練習+趕前面進度 \n week5 \n solvespace\xa0 練習 \n 1.運用左方工具列製作一個形狀並擠出 , 在儲存 \n 2.在開啟多個剛剛製作的物件 \n 3. 運用左側工具列設定方向 \n 4. 按O讓兩點相連接 \n 5. 成品 \n 快速鍵 \n sketch rectangle\xa0 (R) \n sketch line segment (S) \n sketch circle \xa0(C) \n constrain distance\xa0 (D) \n constrain angle \xa0 ( N) \n nearest isometric view\xa0 (F3)\xa0 \n align view to workplane (W)\xa0 \n equal length/radius/angle \xa0 (Q) \n 成品圖 \n \n \n Week6 \n 1.下載V-REP3、web_vrep2 \n 2.畫一台兩輪車 \n 3.操作vrep的兩輪車 \n \n \n \n Week7 \n 1.圖8 \n \n 影片 \n \n 2.圖3 \n \n 影片 \n \n \n Week8 \n 開啟部落格 \n', 'tags': '', 'url': 'Week2-9.html'}, {'title': 'Week1~2', 'text': 'Week1 \n 中秋節放假 \n Week2 \n 創建github倉儲並且練習github指令 \n 1.下載201906_fall \n 2. 創立並且加入課程倉儲名稱為Cad2019 , 然後勾選lnitialize this repository with a README \n 3.\xa0 git clone到近端上(至mde.tw中下載2019fall可攜套件) \n 4. 使用git submodule add之指令建立目錄並取下子模組 \n 5. 當要開啟近端時必須要先進入cmsimde才能夠打上python wsgi.py指令 \n 影片 : \n \n \n', 'tags': '', 'url': 'Week1~2.html'}, {'title': 'Week3~4', 'text': 'Week3 \n 1.先將 Y:\\portablegit\\bin\\sh.exe 改名為 sh_rename_for_solvespace.exe \n 2. \xa0打指令git clone\xa0 --recurse-submodules \n 3.到untitle編輯cmakelist內之713及714行(加入#字號) \n 4.進入資料夾 cd solvespace>cd extlib>cd libpng>mkdir build>cd build \n 5.執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make \n 6.找到檔案 \xa0libpng.dll.a 更名, 更名名為 libpng_static.a \n 7.回到 solvespace 目錄,建立 build 目錄後進入 build 資料夾 \n 8.在執行指令cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make \n Week4 \n 練習+趕前面進度 \n', 'tags': '', 'url': 'Week3~4.html'}, {'title': 'Week5~6', 'text': 'week5 \n solvespace\xa0 練習 \n 1.運用左方工具列製作一個形狀並擠出 , 在儲存 \n 2.在開啟多個剛剛製作的物件 \n 3. 運用左側工具列設定方向 \n 4. 按O讓兩點相連接 \n 5. 成品 \n 快速鍵 \n sketch rectangle\xa0 (R) \n sketch line segment (S) \n sketch circle \xa0(C) \n constrain distance\xa0 (D) \n constrain angle \xa0 ( N) \n nearest isometric view\xa0 (F3)\xa0 \n align view to workplane (W)\xa0 \n equal length/radius/angle \xa0 (Q) \n 成品圖 \n \n \n Week6 \n 1.下載V-REP3、web_vrep2 \n 2.畫一台兩輪車 \n 3.操作vrep的兩輪車 \n \n \n \n', 'tags': '', 'url': 'Week5~6.html'}, {'title': 'Week7~8', 'text': 'Week7 \n 1.圖8 \n 影片 \n \n 2.圖3 \n \n 影片 \n \n \n Week8 \n 開啟部落格 \n', 'tags': '', 'url': 'Week7~8.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};